#+title: ESS with Spacemacs

* Goals of this presentation

1. Convey why spacemacs might be of interest
2. Ultra-quick start guide to ESS via spacemacs
3. Give pointers for further spacemacs use

* What is spacemacs?

Spacemacs is a configuration of emacs. It is designed to offer a nice experience
out-of-the-box and provides a framework for further customisation. The following
quotes from the Spacemacs documentation are useful for getting an idea of what
it is all about.

#+begin_quote
The best editor is neither Emacs nor Vim, it's Emacs and Vim!
#+end_quote

#+begin_quote
ergonomics, mnemonics and consistency 
#+end_quote

An important part of spacemacs is the idea of /layers/; we will see some layers
in a bit later in this presentation.

* Ultra-quick start guide

There is a proper [[https://github.com/syl20bnr/spacemacs#install][installation guide]] on GitHub, but here are the main steps.
Followed by a simple example to demonstrate what ESS looks like in spacemacs.

** Back up your existing configuration!

To avoid losing your existing carefully crafted configuration, please back
everything up before proceeding. The following should suffice for most people.

#+begin_src sh
cd ~
mv .emacs.d .emacs.d.bak
mv .emacs .emacs.bak
#+end_src

** Clone the repository

#+begin_src sh
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d 
#+end_src

** Start emacs and face the Wizard

There is a wizard which will ask you a few questions about how to set up
spacemacs. The defaults work well. This will generate a configuration file
=~/.spacemacs=.

** Open the configuration file: =SPC f e d=

The =.spacemacs= file which is generated by the Wizard from the previous step is
the starting point for tweaking spacemacs. There are lots of comments in there
explaining how to edit this file but we can get away with ignoring all of it
except the =dotspacemacs-configuration-layers=.

** Set up your layers in =dotspacemacs-configuration-layers=

Layers are collections of packages that have been configured to work well
together. There are lots of layers available. Here are some that are useful if
you want to use spacemacs for ESS.

#+begin_src emacs-lisp
   '(
     better-defaults
     emacs-lisp
     ess
     git
     helm
     org
     (shell :variables
            shell-default-height 30
            shell-default-position 'bottom)
     syntax-checking
     version-control)
#+end_src

** Restart: =SPC q r=

You probably don't need to restart emacs at this point, you could instead just
reload the configuration with =SPC f e R=, but doing a full restart shouldn't
take long and is more reliable.

** Profit!

* Example

** Opening a shell and setting up the example

- =SPC '= to start a shell
  + change to the =example= directory of this repository.
  + use =ls= to confirm =demo.R= is there.
- =SPC f f= to visit (/find/) the /file/ =demo.R=
  + Add an expression to the file, e.g. =print("hello world")=.
  + Save the buffer with =SPC f s=, i.e. /file/ and /save/.
  
** Visiting a file and starting a REPL

- =SPC m '= to start a REPL
  + It will ask you to choose the intial working directory
  + Navigate between /windows/ by =SPC w= and selecting an action
- /Send/ the whole /buffer/ with =SPC s b=.
- /Send/ the selected /region/ with =SPC s r=.

** Kill the REPL

- =C-x k= to /kill/ the REPL.
  
* Core pillars

#+begin_quote
ergonomics, mnemonics and consistency 
#+end_quote

** ergonomics

Keybindings start with =SPC= and everything uses helm

** mnemonics

Often you can guess the keybindings for common functionality

- /files/ =SPC f=
  + /find file/ =SPC f f=
  + dired /jump/ =SPC f j=
- /modes/ =SPC m=
  + /go/ to a definition =SPC m g=
  + /send/ code to the REPL =SPC m s=
  + /evaluate/ code =SPC m e=
- /buffers/ =SPC b=
- /windows/ =SPC w=
- /quit/ =SPC q=
  
** consistency

bindings are fairly consistent across layers

[[https://www.spacemacs.org/layers/LAYERS.html]]

* More spacemacs

- Documentation builtin: =SPC h SPC=
- [[https://www.reddit.com/r/spacemacs]]
- There is a vim clone [[https://github.com/SpaceVim/SpaceVim][SpaceVim]]
- My tweaks to spacemacs are documented [[https://github.com/aezarebski/nicemacs][here]].
  
* Gotchas

** Source Code Pro

Spacemacs seems to like to use source code pro, this beyond the scope of this
presentation, but there are good instructions for installing it all over the
internet. It appears that spacemacs works fine even if you do not have Source
Code Pro available, so there is no need to get hung up on this.

** Warnings when updating packages

Whenever I update my packages there are often warnings. For the most part these
don't seem to cause any real problems. It would be nice to address these, but
until it breaks I'm reluctant to sink much time into this.
