#+title: ESS with Spacemacs

[[../resources/spacemacs-logo.png]]

* Goals of this presentation

1. Convey why spacemacs might be of interest
2. Ultra-quick start guide to ESS via spacemacs
3. Give pointers for further spacemacs use

* What is spacemacs?

Spacemacs is a configuration of emacs. It is designed to offer a nice experience
out-of-the-box and provides a framework for further customisation. The following
quotes from the Spacemacs documentation are useful for getting an idea of what
it is all about.

#+begin_quote
The best editor is neither Emacs nor Vim, it's Emacs and Vim!
#+end_quote

#+begin_quote
ergonomics, mnemonics and consistency 
#+end_quote

An important part of spacemacs is the idea of /layers/; we will see some layers
in a bit later in this presentation.

* Ultra-quick start guide

There is a proper [[https://github.com/syl20bnr/spacemacs#install][installation guide]] on GitHub, but here are the main steps.
Followed by a simple example to demonstrate what ESS looks like in spacemacs.

** Clone the spacemacs repository

*WARNING:* Please back up any existing configuration files before proceeding.

Cloning the spacemacs repository from github using the command shown below
creates a =.emacs.d= directory in your home directory. It is this repository
that contains the actual spacemacs configuration. For the most part you can just
ignore this though. Emacs will find this information on start up and guide you
through the rest of the installation.

#+begin_src sh
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d 
#+end_src

** Start emacs and face the Wizard

When you first start emacs after cloning the spacemacs repository you should see
the spacemacs logo and there will be a message from a start up wizard in the
mode line. The wizard will ask you a few questions about how to set up
spacemacs, e.g. do you want vim or emacs keybindings. The defaults work well.

The wizard will generate another file in your home directory, =.spacemacs=. This
file is useful for finetuning how spacemacs works and brings us to an important
concept in spacemacs: /layers/.

** An interlude into layers

The documentation describes layers in the following way.

#+begin_quote
A collected unit of configuration that can be enabled (or disabled) in
Spacemacs. A layer typically brings together one or more packages, as well as
the glue configuration code required to make them play well with each other and
Spacemacs in general.
#+end_quote

Layers are sets of major and minor modes that play well together and make it
easier to do task /X/. There is an ESS layer, which includes ESS but also a bunch
of other nifty packages that you will likely want to have loaded when doing
statistical work.

There are a huge range of layers that have been carefully crafted, you might
want to check out the [[https://www.spacemacs.org/layers/LAYERS.html][listing]] to see if there are others that might be useful.
If you like language /Y/, there is probably a layer for that. Moreover, it will
probably expose near identical key-bindings to the layer for language /Z/, which
makes it much simpler to use multiple languages.

** Open the configuration file: =SPC f e d=

/Okay, so now we know what layers are, how do we tell spacemacs which ones we
want?/ This is done using the =dotspacemacs-configuration-layers= variable in
the =.spacemacs= file, which was automagically generated when you installed
spacemacs. You can visit the =.spacemacs= file using =SPC f e d= (ie press the
space bar, then the f-key, then the e-key then the d-key).


** Set up your layers in =dotspacemacs-configuration-layers=

There are lots of options in the =.spacemacs= file, and the vast majority can be
ignored. The =dotspacemacs-configuration-layers= variable is defined around
line 30. Once you have found the variable, set its value to something like the
example below. There will likely be some recommended layers already there, it's
fine to leave them, you just need to make sure you have some layer called
=shell= and the =ess= layer.

#+begin_src emacs-lisp
   '(
     better-defaults
     emacs-lisp
     ess ;; <-- WOO!!!
     helm
     org
     (shell :variables
            shell-default-height 30
            shell-default-position 'bottom)
     syntax-checking
     version-control)
#+end_src

** Restart: =SPC q r=

You probably don't need to restart emacs at this point, you could instead just
reload the configuration with =SPC f e R=, but doing a full restart shouldn't
take long and is more reliable.

** Profit!

Amazingly that is all that you needed to do! You now have access to many
carefully crafted layers which cover nearly all things you might want to do in
emacs, there is even a spotify layer.

* Example

** Opening a shell and setting up the example

- =SPC '= to start a shell
  + change to the =example= directory of this repository.
  + use =ls= to confirm =demo.R= is there.
- =SPC f f= to visit (/find/) the /file/ =demo.R=
  + Add an expression to the file, e.g. =print("hello world")=.
  + Save the buffer with =SPC f s=, i.e. /file/ and /save/.
  
** Visiting a file and starting a REPL

- =SPC m '= to start a REPL
  + It will ask you to choose the intial working directory
  + Navigate between /windows/ by =SPC w= and selecting an action
- /Send/ the whole /buffer/ with =SPC s b=.
- /Send/ the selected /region/ with =SPC s r=.

** Kill the REPL

- =C-x k= to /kill/ the REPL.
  
* Core pillars

#+begin_quote
ergonomics, mnemonics and consistency 
#+end_quote

** ergonomics

Keybindings start with =SPC= and everything uses helm, and it has beautiful
light and dark themes already configured (=SPC T n=)

** mnemonics

Often you can guess the keybindings for common functionality

- /files/ =SPC f=
  + /find file/ =SPC f f=
  + dired /jump/ =SPC f j=
- /modes/ =SPC m=
  + /go/ to a definition =SPC m g=
  + /send/ code to the REPL =SPC m s=
  + /evaluate/ code =SPC m e=
- /buffers/ =SPC b=
- /windows/ =SPC w=
- /quit/ =SPC q= for the many ways to quit emacs (sorry vim).
- /git/ =SPC g= for the the magit layer
  
** consistency

This is a really good aspect of spacemacs, the bindings are very consistent
across layers which makes switching between languages is easy.

[[https://www.spacemacs.org/layers/LAYERS.html]]

* More spacemacs

- Documentation builtin: =SPC h SPC=
- [[https://www.reddit.com/r/spacemacs]]
- There is a vim clone [[https://github.com/SpaceVim/SpaceVim][SpaceVim]]
- My tweaks to spacemacs are documented [[https://github.com/aezarebski/nicemacs][here]].
  
* Gotchas

** Vim keybindings while viewing Info pages

I find Info pages confusing in general, but they seem even more confusing via
spacemacs. The keys =np[]lrmsb<SPC>= all kind of work provided you hit =\= first
to jump into emacs keybindings. To navigate around the text, you get =hjkl= by
default.

** Source Code Pro

Spacemacs seems to like to use source code pro, this beyond the scope of this
presentation, but there are good instructions for installing it all over the
internet. It appears that spacemacs works fine even if you do not have Source
Code Pro available, so there is no need to get hung up on this.

** Warnings when updating packages

Whenever I update my packages there are often warnings. For the most part these
don't seem to cause any real problems. It would be nice to address these, but
until it breaks I'm reluctant to sink much time into this.
